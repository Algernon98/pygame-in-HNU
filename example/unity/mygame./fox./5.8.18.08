
//using System.Threading.Tasks.Dataflow;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class playerController : MonoBehaviour
{


    public Rigidbody2D rb;
    public float speed ;
    public float jumpForce;
    public Animator anim;
    public LayerMask ground;
    public Collider2D coll;
    public Transform groundCheck;
    public LayerMask ground;

    //public bool isGround;
    //public bool isJump;
    //bool jumpPressed;
    //int jumpCount;
    // Start is called before the first frame update
    void Start()
    {
        
        //rb=GetComponent<Rigidbody2D>();
        //coll=GetComponent<Collider2D>();
        //anim=GetComponent<Animator>();
        
    }

    // Update is called once per frame
 /*   void Update()
    {
        if(Input.GetButtonDown("Jump") && jumpCount>0)
        {
            jumpPressed=true;
        }
    }
*/
    void FixedUpdate()
    {
        /*isGround=Physics2D.OverlapCircle(groundCheck.position,0.1f,ground);
        GroundMovement();
        Jump();
        SwitchAnim();
        */

        Movement();
        SwitchAnim();

    }
    void Movement()
    {
        float horizontalMove;
        float horizontalMove=Input.GetAxis("Horizontal");
        float facedirection = Input.GetAxisRaw("Horizontal");
        if(horizontalMove !=0)
        {
            rb.velocity=new Vector2(horizontalMove*speed*Time.deltaTime,rb.velocity.y);
            anim.SetFloat("running",Mathf.Abs(facedirection));

        }
        if(facedirection !=0)
        {
            transform.localScale=new Vector3(facedirection,1,1);
            

        }

        if(Input.GetButtonDown("Jump"))
        {
            rb.velocity=new Vector2(rb.velocity.x,jumpForce*Time.deltaTime);
            anim.SetBool("jumping",true);
        }
        
        void SwitchAnim()
        {
            anim.SetBool("idle",false);
            if (anim.GetBool("jumping"))
            {
                if(rb.velocity.y<0)
                {
                    anim.SetBool("jumping",false);
                    anim.SetBool("falling",true);
                }
            }else if (coll.IsTouchingLayers(ground))
            {
                anim.SetBool("falling",false);
                anim.SetBool("idle",true);

            }
        }
    }

/*
    void GroundMovement()
    {
        float horizontalMove=Input.GetAxis("Horizontal");
        float facedirection = Input.GetAxisRaw("Horizontal");
        rb.velocity=new Vector2(horizontalMove *speed,rb.velocity.y);
        if(horizontalMove !=0)
        {
            rb.velocity=new Vector2(horizontalMove*speed*Time.deltaTime,rb.velocity.y);

        }

        if(facedirection !=0)
        {
            transform.localScale=new Vector3(facedirection,1,1);

        }

    }
*/

/*
    void Jump()
    {
        if (isGround)
        {
            jumpCount=2;
            isJump=false;
        }
        is(jumpPressed && isGround)
        {
            isJump=true;
            rb.velocity=new Vector2(rb.velocity.x,jumpForce);
            jumpCount--;
            jumpPressed=false;
        }
        else if(jumpPressed && jumpCount>0 && isJump)
        {
            rb.velocity=new Vector2(rb.velocity.x,jumpForce);
            jumpCount--;
            jumpPressed=false;


        }

    }
*/
/*
    void SwitchAnim()
    {
        anim.SetFloat("running",MathF.Abs(rb.velocity.x));

        if(isGround)
        {
            anim.SetBool("falling",false);

        }
        else if(!isGround &&rb.velocity.y>0)
        {
            anim.SetBool("jumping",true);
        }
        else if(rb.velocity.y<0)
        {
            anim.SetBool("jumping",false);
            anim.SetBool("falling",true);
        }
    }
*/
    
}
